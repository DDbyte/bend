(you can check the version by running node -v in the command line).

dir structure:
├── index.js             // Entry point for the application
├── app.js               // App configuration
├── controllers          // Controllers to handle the business logic
│   └── blogs.js         // Handles blog-related actions
├── models               // Mongoose models
│   └── blog.js          // Blog model
├── package-lock.json
├── package.json
├── utils                // Utility functions
│   ├── config.js        // Configuration for environment variables
│   ├── logger.js        // Logging functionality
│   └── middleware.js     // Middleware functions

//utils/list_helper.js
const favoriteBlog = (blogs) => {
    if(blogs.length === 0) {
        return null
    }
    const fav = blogs.reduce((max, blog) => {
        return blog.likes > blog.max ? blog: max}, blogs[0])
    return{
        title: favorite.title,
        author: favorite.author,
        likes: favorite.likes,
    }
}
gen syntax-reduce():
array.reduce((accumulator, currentValue) => {
  // logic to update the accumulator
}, initialValue);
1.init val: max=blogs[0]
2.callback fct: checks f the current blog has more likes then the current maximum, if true returns the current as the new max.
**********
const mostBlogs = (blogs) => {
  if (blogs.length === 0) return null;
  //count blogs by author
  const autCount = blogs.reduce((count, blog) =>{
    count[blog.author] = (count[blog.author] || 0) +1
    return count
  }, {})
  reduce(callback, {})
  callback=(count, blog) => {count[blog.author] = (count[blog.author]) +1}, {}
  callback=(obj build as reduce iters, current element) => {author: 1, ...}
  
}

